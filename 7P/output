
----------output1----------

+++++++Checking mapTest.cpp++++++++

[==========] Running 26 tests from 2 test cases.
[----------] Global test environment set-up.
[----------] 24 tests from MapTest
[ RUN      ] MapTest.constructorCreatesZeroSizeMap
[       OK ] MapTest.constructorCreatesZeroSizeMap (0 ms)
[ RUN      ] MapTest.insertWhileEmptyReturnsTrueAndMapSizeIsOne
[       OK ] MapTest.insertWhileEmptyReturnsTrueAndMapSizeIsOne (0 ms)
[ RUN      ] MapTest.insertOfSameKeyReturnsFalseAndMapSizeRemainsSame
[       OK ] MapTest.insertOfSameKeyReturnsFalseAndMapSizeRemainsSame (0 ms)
[ RUN      ] MapTest.indexOperatorOfExistingKeyReturnsProperValueAndSizeIsSame
[       OK ] MapTest.indexOperatorOfExistingKeyReturnsProperValueAndSizeIsSame (0 ms)
[ RUN      ] MapTest.indexOperatorOnEmptyMapProperlySetsValueAndSizeIsOne
[       OK ] MapTest.indexOperatorOnEmptyMapProperlySetsValueAndSizeIsOne (0 ms)
[ RUN      ] MapTest.indexOperatorOnMissingKeyProperlySetsValueAndIncrementsSize
[       OK ] MapTest.indexOperatorOnMissingKeyProperlySetsValueAndIncrementsSize (0 ms)
[ RUN      ] MapTest.eraseOfExistingKeyReturnsTrueAndDecrementsSize
[       OK ] MapTest.eraseOfExistingKeyReturnsTrueAndDecrementsSize (0 ms)
[ RUN      ] MapTest.eraseOnEmptyMapReturnsFalseAndSizeRemainsZero
[       OK ] MapTest.eraseOnEmptyMapReturnsFalseAndSizeRemainsZero (0 ms)
[ RUN      ] MapTest.eraseOfMissingKeyReturnsFalseAndSizeRemainsSame
[       OK ] MapTest.eraseOfMissingKeyReturnsFalseAndSizeRemainsSame (0 ms)
[ RUN      ] MapTest.beginOnEmptyMapReturnsSameAsEnd
[       OK ] MapTest.beginOnEmptyMapReturnsSameAsEnd (0 ms)
[ RUN      ] MapTest.beginWithDataReturnsItemIteratorNotEqualToEnd
[       OK ] MapTest.beginWithDataReturnsItemIteratorNotEqualToEnd (0 ms)
[ RUN      ] MapTest.beginReturnsFirstItemInMapUsingArrowOperator
[       OK ] MapTest.beginReturnsFirstItemInMapUsingArrowOperator (0 ms)
[ RUN      ] MapTest.beginReturnsFirstItemInMapUsingDereferenceOperator
[       OK ] MapTest.beginReturnsFirstItemInMapUsingDereferenceOperator (0 ms)
[ RUN      ] MapTest.EqualOperatorOnEqualIteratorsReturnsTrue
[       OK ] MapTest.EqualOperatorOnEqualIteratorsReturnsTrue (0 ms)
[ RUN      ] MapTest.EqualOperatorOnUnequalIteratorsReturnsFalse
[       OK ] MapTest.EqualOperatorOnUnequalIteratorsReturnsFalse (0 ms)
[ RUN      ] MapTest.NotEqualOperatorOnEqualIteratorsReturnsFalse
[       OK ] MapTest.NotEqualOperatorOnEqualIteratorsReturnsFalse (0 ms)
[ RUN      ] MapTest.NotEqualOperatorOnUnequalIteratorsReturnsTrue
[       OK ] MapTest.NotEqualOperatorOnUnequalIteratorsReturnsTrue (0 ms)
[ RUN      ] MapTest.findOfExistingKeyReturnsIteratorToIt
[       OK ] MapTest.findOfExistingKeyReturnsIteratorToIt (0 ms)
[ RUN      ] MapTest.findOfNonExistingKeyReturnsIteratorToEnd
[       OK ] MapTest.findOfNonExistingKeyReturnsIteratorToEnd (0 ms)
[ RUN      ] MapTest.copyConstructorMakesCorrectSize
[       OK ] MapTest.copyConstructorMakesCorrectSize (0 ms)
[ RUN      ] MapTest.copyConstructorMakesSeparateCopy
[       OK ] MapTest.copyConstructorMakesSeparateCopy (0 ms)
[ RUN      ] MapTest.assignmentOperatorMakesCorrectSize
[       OK ] MapTest.assignmentOperatorMakesCorrectSize (0 ms)
[ RUN      ] MapTest.assignmentMakesSeparateCopy
[       OK ] MapTest.assignmentMakesSeparateCopy (0 ms)
[ RUN      ] MapTest.assignmentWithManyItemsHasCorrectValues
[       OK ] MapTest.assignmentWithManyItemsHasCorrectValues (2 ms)
[----------] 24 tests from MapTest (2 ms total)

[----------] 2 tests from mapTest
[ RUN      ] mapTest.arrowAndDereferenceOperatorsOnSameIteratorWorkEquivalently
[       OK ] mapTest.arrowAndDereferenceOperatorsOnSameIteratorWorkEquivalently (0 ms)
[ RUN      ] mapTest.arrowAndDereferenceOperatorsOnEndIteratorWorkEquivalently
[       OK ] mapTest.arrowAndDereferenceOperatorsOnEndIteratorWorkEquivalently (0 ms)
[----------] 2 tests from mapTest (0 ms total)

[----------] Global test environment tear-down
[==========] 26 tests from 2 test cases ran. (2 ms total)
[  PASSED  ] 26 tests.

----------output2----------


+++++++Checking mapTest.cpp against some broken code++++++++

[==========] Running 26 tests from 2 test cases.
[----------] Global test environment set-up.
[----------] 24 tests from MapTest
[ RUN      ] MapTest.constructorCreatesZeroSizeMap
[       OK ] MapTest.constructorCreatesZeroSizeMap (0 ms)
[ RUN      ] MapTest.insertWhileEmptyReturnsTrueAndMapSizeIsOne
[       OK ] MapTest.insertWhileEmptyReturnsTrueAndMapSizeIsOne (0 ms)
[ RUN      ] MapTest.insertOfSameKeyReturnsFalseAndMapSizeRemainsSame
[       OK ] MapTest.insertOfSameKeyReturnsFalseAndMapSizeRemainsSame (0 ms)
[ RUN      ] MapTest.indexOperatorOfExistingKeyReturnsProperValueAndSizeIsSame
[       OK ] MapTest.indexOperatorOfExistingKeyReturnsProperValueAndSizeIsSame (0 ms)
[ RUN      ] MapTest.indexOperatorOnEmptyMapProperlySetsValueAndSizeIsOne
[       OK ] MapTest.indexOperatorOnEmptyMapProperlySetsValueAndSizeIsOne (0 ms)
[ RUN      ] MapTest.indexOperatorOnMissingKeyProperlySetsValueAndIncrementsSize
[       OK ] MapTest.indexOperatorOnMissingKeyProperlySetsValueAndIncrementsSize (0 ms)
[ RUN      ] MapTest.eraseOfExistingKeyReturnsTrueAndDecrementsSize
[       OK ] MapTest.eraseOfExistingKeyReturnsTrueAndDecrementsSize (0 ms)
[ RUN      ] MapTest.eraseOnEmptyMapReturnsFalseAndSizeRemainsZero
[       OK ] MapTest.eraseOnEmptyMapReturnsFalseAndSizeRemainsZero (0 ms)
[ RUN      ] MapTest.eraseOfMissingKeyReturnsFalseAndSizeRemainsSame
[       OK ] MapTest.eraseOfMissingKeyReturnsFalseAndSizeRemainsSame (0 ms)
[ RUN      ] MapTest.beginOnEmptyMapReturnsSameAsEnd
[       OK ] MapTest.beginOnEmptyMapReturnsSameAsEnd (0 ms)
[ RUN      ] MapTest.beginWithDataReturnsItemIteratorNotEqualToEnd
mapTest.cpp:107: Failure
Value of: it != testMap.end()
  Actual: false
Expected: true
[  FAILED  ] MapTest.beginWithDataReturnsItemIteratorNotEqualToEnd (0 ms)
[ RUN      ] MapTest.beginReturnsFirstItemInMapUsingArrowOperator
mapTest.cpp:116: Failure
Expected equality of these values:
  it->key
    Which is: ""
  aKey
    Which is: "a"
mapTest.cpp:117: Failure
Expected equality of these values:
  it->data
    Which is: ""
  aValue
    Which is: "alpha"
[  FAILED  ] MapTest.beginReturnsFirstItemInMapUsingArrowOperator (1 ms)
[ RUN      ] MapTest.beginReturnsFirstItemInMapUsingDereferenceOperator
mapTest.cpp:126: Failure
Expected equality of these values:
  (*it).key
    Which is: ""
  aKey
    Which is: "a"
mapTest.cpp:127: Failure
Expected equality of these values:
  (*it).data
    Which is: ""
  aValue
    Which is: "alpha"
[  FAILED  ] MapTest.beginReturnsFirstItemInMapUsingDereferenceOperator (0 ms)
[ RUN      ] MapTest.EqualOperatorOnEqualIteratorsReturnsTrue
mapTest.cpp:153: Failure
Value of: it == it2
  Actual: false
Expected: true
[  FAILED  ] MapTest.EqualOperatorOnEqualIteratorsReturnsTrue (0 ms)
[ RUN      ] MapTest.EqualOperatorOnUnequalIteratorsReturnsFalse
mapTest.cpp:162: Failure
Value of: it == it2
  Actual: true
Expected: false
[  FAILED  ] MapTest.EqualOperatorOnUnequalIteratorsReturnsFalse (0 ms)
[ RUN      ] MapTest.NotEqualOperatorOnEqualIteratorsReturnsFalse
mapTest.cpp:171: Failure
Value of: it != it2
  Actual: true
Expected: false
[  FAILED  ] MapTest.NotEqualOperatorOnEqualIteratorsReturnsFalse (0 ms)
[ RUN      ] MapTest.NotEqualOperatorOnUnequalIteratorsReturnsTrue
mapTest.cpp:180: Failure
Value of: it != it2
  Actual: false
Expected: true
[  FAILED  ] MapTest.NotEqualOperatorOnUnequalIteratorsReturnsTrue (0 ms)
[ RUN      ] MapTest.findOfExistingKeyReturnsIteratorToIt
mapTest.cpp:189: Failure
Expected equality of these values:
  it->key
    Which is: ""
  aKey
    Which is: "a"
mapTest.cpp:190: Failure
Expected equality of these values:
  (*it).data
    Which is: ""
  aValue
    Which is: "alpha"
[  FAILED  ] MapTest.findOfExistingKeyReturnsIteratorToIt (0 ms)
[ RUN      ] MapTest.findOfNonExistingKeyReturnsIteratorToEnd
mapTest.cpp:199: Failure
Value of: it == testMap.end()
  Actual: false
Expected: true
[  FAILED  ] MapTest.findOfNonExistingKeyReturnsIteratorToEnd (0 ms)
[ RUN      ] MapTest.copyConstructorMakesCorrectSize
[       OK ] MapTest.copyConstructorMakesCorrectSize (0 ms)
[ RUN      ] MapTest.copyConstructorMakesSeparateCopy
[       OK ] MapTest.copyConstructorMakesSeparateCopy (0 ms)
[ RUN      ] MapTest.assignmentOperatorMakesCorrectSize
[       OK ] MapTest.assignmentOperatorMakesCorrectSize (0 ms)
[ RUN      ] MapTest.assignmentMakesSeparateCopy
[       OK ] MapTest.assignmentMakesSeparateCopy (0 ms)
[ RUN      ] MapTest.assignmentWithManyItemsHasCorrectValues
[       OK ] MapTest.assignmentWithManyItemsHasCorrectValues (2 ms)
[----------] 24 tests from MapTest (3 ms total)

[----------] 2 tests from mapTest
[ RUN      ] mapTest.arrowAndDereferenceOperatorsOnSameIteratorWorkEquivalently
[       OK ] mapTest.arrowAndDereferenceOperatorsOnSameIteratorWorkEquivalently (0 ms)
[ RUN      ] mapTest.arrowAndDereferenceOperatorsOnEndIteratorWorkEquivalently
[       OK ] mapTest.arrowAndDereferenceOperatorsOnEndIteratorWorkEquivalently (0 ms)
[----------] 2 tests from mapTest (0 ms total)

[----------] Global test environment tear-down
[==========] 26 tests from 2 test cases ran. (3 ms total)
[  PASSED  ] 17 tests.
[  FAILED  ] 9 tests, listed below:
[  FAILED  ] MapTest.beginWithDataReturnsItemIteratorNotEqualToEnd
[  FAILED  ] MapTest.beginReturnsFirstItemInMapUsingArrowOperator
[  FAILED  ] MapTest.beginReturnsFirstItemInMapUsingDereferenceOperator
[  FAILED  ] MapTest.EqualOperatorOnEqualIteratorsReturnsTrue
[  FAILED  ] MapTest.EqualOperatorOnUnequalIteratorsReturnsFalse
[  FAILED  ] MapTest.NotEqualOperatorOnEqualIteratorsReturnsFalse
[  FAILED  ] MapTest.NotEqualOperatorOnUnequalIteratorsReturnsTrue
[  FAILED  ] MapTest.findOfExistingKeyReturnsIteratorToIt
[  FAILED  ] MapTest.findOfNonExistingKeyReturnsIteratorToEnd

 9 FAILED TESTS

----------output3----------


+++++++Map Test 1++++++++

	9 1
			8 2
				7 1
		6 2
			15 2
					14 1
				13 1
12 1
	11 2
		10 2

+++++++Valgrind++++++++

==6108== Memcheck, a memory error detector
==6108== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==6108== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==6108== Command: ./maptest1
==6108== 
	9 1
			8 2
				7 1
		6 2
			15 2
					14 1
				13 1
12 1
	11 2
		10 2
==6108== 
==6108== HEAP SUMMARY:
==6108==     in use at exit: 0 bytes in 0 blocks
==6108==   total heap usage: 13 allocs, 13 frees, 77,680 bytes allocated
==6108== 
==6108== All heap blocks were freed -- no leaks are possible
==6108== 
==6108== For lists of detected and suppressed errors, rerun with: -s
==6108== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

----------output4----------


+++++++Map Test 2++++++++

	9 1
			8 2
				7 1
		6 2
			15 2
					14 1
				13 1
12 1
	11 2
		10 2

+++++++++++++++++++++++++++++
	9 1
			8 2
				7 1
		6 2
			15 2
					14 1
				13 1
12 1
	11 2

+++++++++++++++++++++++++++++
	9 1
			8 2
				7 1
		6 2
			15 2
					14 1
				13 1
12 1
	11 2

+++++++++++++++++++++++++++++
	9 1
			8 2
		7 1
			15 2
					14 1
				13 1
12 1
	11 2

+++++++++++++++++++++++++++++
	9 1
			8 2
		7 1
				14 1
			13 1
12 1
	11 2

+++++++++++++++++++++++++++++
	9 1
			8 2
		7 1
			14 1
13 1
	11 2

+++++++++++++++++++++++++++++

+++++++Valgrind++++++++

==6138== Memcheck, a memory error detector
==6138== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==6138== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==6138== Command: ./maptest2
==6138== 
	9 1
			8 2
				7 1
		6 2
			15 2
					14 1
				13 1
12 1
	11 2
		10 2

+++++++++++++++++++++++++++++
	9 1
			8 2
				7 1
		6 2
			15 2
					14 1
				13 1
12 1
	11 2

+++++++++++++++++++++++++++++
	9 1
			8 2
				7 1
		6 2
			15 2
					14 1
				13 1
12 1
	11 2

+++++++++++++++++++++++++++++
	9 1
			8 2
		7 1
			15 2
					14 1
				13 1
12 1
	11 2

+++++++++++++++++++++++++++++
	9 1
			8 2
		7 1
				14 1
			13 1
12 1
	11 2

+++++++++++++++++++++++++++++
	9 1
			8 2
		7 1
			14 1
13 1
	11 2

+++++++++++++++++++++++++++++
==6138== 
==6138== HEAP SUMMARY:
==6138==     in use at exit: 0 bytes in 0 blocks
==6138==   total heap usage: 13 allocs, 13 frees, 77,680 bytes allocated
==6138== 
==6138== All heap blocks were freed -- no leaks are possible
==6138== 
==6138== For lists of detected and suppressed errors, rerun with: -s
==6138== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

----------output5----------


+++++++Map Test 3++++++++


+++++++Valgrind++++++++

==6168== Memcheck, a memory error detector
==6168== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==6168== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==6168== Command: ./maptest3
==6168== 
==6168== 
==6168== HEAP SUMMARY:
==6168==     in use at exit: 0 bytes in 0 blocks
==6168==   total heap usage: 17 allocs, 17 frees, 73,984 bytes allocated
==6168== 
==6168== All heap blocks were freed -- no leaks are possible
==6168== 
==6168== For lists of detected and suppressed errors, rerun with: -s
==6168== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

----------output6----------


+++++++Map Test 4++++++++


+++++++Valgrind++++++++

==6198== Memcheck, a memory error detector
==6198== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==6198== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==6198== Command: ./maptest4
==6198== 
==6198== 
==6198== HEAP SUMMARY:
==6198==     in use at exit: 0 bytes in 0 blocks
==6198==   total heap usage: 17 allocs, 17 frees, 73,984 bytes allocated
==6198== 
==6198== All heap blocks were freed -- no leaks are possible
==6198== 
==6198== For lists of detected and suppressed errors, rerun with: -s
==6198== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

----------output7----------


+++++++Map Test 5++++++++

			9 a
		8 a
	61 a
		49 a
45 a
		4 a
			35 a
						33 a
					31 a
				3 a
					27 a
	21 a
		2 a
				17 a
			12 a
		8 a
	61 a
		49 a
45 a
		4 a
			35 a
						33 a
					31 a
				3 a
					27 a
	21 a
		2 a
				17 a
			12 a

+++++++++++++++++++++++++++++
		8 a
	61 a
		49 a
45 a
		4 a
			35 a
						33 a
					31 a
				3 a
	21 a
		2 a
				17 a
			12 a

+++++++++++++++++++++++++++++
		8 a
	61 a
		49 a
45 a
		4 a
			35 a
					33 a
				31 a
	3 a
		2 a
				17 a
			12 a

+++++++++++++++++++++++++++++
		8 a
	61 a
		49 a
45 a
		35 a
				33 a
			31 a
	3 a
		2 a
				17 a
			12 a

+++++++++++++++++++++++++++++
	8 a
		49 a
45 a
		35 a
				33 a
			31 a
	3 a
		2 a
				17 a
			12 a

+++++++++++++++++++++++++++++
	8 a
		49 a
45 a
		35 a
			31 a
	3 a
		2 a
				17 a
			12 a

+++++++++++++++++++++++++++++
	8 a
		49 a
45 a
		35 a
			31 a
	3 a
		2 a
			17 a

+++++++++++++++++++++++++++++
	8 a
		49 a
45 a
		35 a
	31 a
		2 a
			17 a

+++++++++++++++++++++++++++++
	8 a
		49 a
45 a
		35 a
	31 a
		17 a

+++++++++++++++++++++++++++++
	8 a
		49 a
45 a
		35 a
	31 a

+++++++++++++++++++++++++++++
	8 a
49 a
		35 a
	31 a

+++++++++++++++++++++++++++++
	8 a
49 a
	35 a

+++++++++++++++++++++++++++++
8 a
	35 a

+++++++++++++++++++++++++++++
8 a

+++++++++++++++++++++++++++++


+++++++Valgrind++++++++

==6229== Memcheck, a memory error detector
==6229== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==6229== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==6229== Command: ./maptest5
==6229== 
			9 a
		8 a
	61 a
		49 a
45 a
		4 a
			35 a
						33 a
					31 a
				3 a
					27 a
	21 a
		2 a
				17 a
			12 a
		8 a
	61 a
		49 a
45 a
		4 a
			35 a
						33 a
					31 a
				3 a
					27 a
	21 a
		2 a
				17 a
			12 a

+++++++++++++++++++++++++++++
		8 a
	61 a
		49 a
45 a
		4 a
			35 a
						33 a
					31 a
				3 a
	21 a
		2 a
				17 a
			12 a

+++++++++++++++++++++++++++++
		8 a
	61 a
		49 a
45 a
		4 a
			35 a
					33 a
				31 a
	3 a
		2 a
				17 a
			12 a

+++++++++++++++++++++++++++++
		8 a
	61 a
		49 a
45 a
		35 a
				33 a
			31 a
	3 a
		2 a
				17 a
			12 a

+++++++++++++++++++++++++++++
	8 a
		49 a
45 a
		35 a
				33 a
			31 a
	3 a
		2 a
				17 a
			12 a

+++++++++++++++++++++++++++++
	8 a
		49 a
45 a
		35 a
			31 a
	3 a
		2 a
				17 a
			12 a

+++++++++++++++++++++++++++++
	8 a
		49 a
45 a
		35 a
			31 a
	3 a
		2 a
			17 a

+++++++++++++++++++++++++++++
	8 a
		49 a
45 a
		35 a
	31 a
		2 a
			17 a

+++++++++++++++++++++++++++++
	8 a
		49 a
45 a
		35 a
	31 a
		17 a

+++++++++++++++++++++++++++++
	8 a
		49 a
45 a
		35 a
	31 a

+++++++++++++++++++++++++++++
	8 a
49 a
		35 a
	31 a

+++++++++++++++++++++++++++++
	8 a
49 a
	35 a

+++++++++++++++++++++++++++++
8 a
	35 a

+++++++++++++++++++++++++++++
8 a

+++++++++++++++++++++++++++++

==6229== 
==6229== HEAP SUMMARY:
==6229==     in use at exit: 0 bytes in 0 blocks
==6229==   total heap usage: 18 allocs, 18 frees, 78,080 bytes allocated
==6229== 
==6229== All heap blocks were freed -- no leaks are possible
==6229== 
==6229== For lists of detected and suppressed errors, rerun with: -s
==6229== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

----------output8----------


+++++++Map Test 6++++++++

	5 d
			35 g
		30 e
			25 f
						23 j
					22 i
				21 h
20 a
		15 c
	10 b

------------erase 20------------
	5 d
			35 g
		30 e
			25 f
					23 j
				22 i
21 h
		15 c
	10 b

------------erase 15------------
	5 d
			35 g
		30 e
			25 f
					23 j
				22 i
21 h
	10 b

------------erase 35------------
	5 d
		30 e
			25 f
					23 j
				22 i
21 h
	10 b

------------insert 16-18------------
	5 d
		30 e
			25 f
					23 j
				22 i
21 h
			18 l
				17 m
		16 k
	10 b

------------erase 10------------
	5 d
		30 e
			25 f
					23 j
				22 i
21 h
		18 l
			17 m
	16 k

------------erase 5------------
	30 e
		25 f
				23 j
			22 i
21 h
		18 l
			17 m
	16 k

------------erase 30------------
	25 f
			23 j
		22 i
21 h
		18 l
			17 m
	16 k

------------erase 25------------
		23 j
	22 i
21 h
		18 l
			17 m
	16 k

------------erase 21------------
	23 j
22 i
		18 l
			17 m
	16 k

------------erase 18------------
	23 j
22 i
		17 m
	16 k

------------erase 17------------
	23 j
22 i
	16 k

------------erase 16------------
	23 j
22 i

------------erase 22------------
23 j

------------erase 23------------

------------erase 23 again------------


+++++++Valgrind++++++++

==6259== Memcheck, a memory error detector
==6259== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==6259== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==6259== Command: ./maptest6
==6259== 
	5 d
			35 g
		30 e
			25 f
						23 j
					22 i
				21 h
20 a
		15 c
	10 b

------------erase 20------------
	5 d
			35 g
		30 e
			25 f
					23 j
				22 i
21 h
		15 c
	10 b

------------erase 15------------
	5 d
			35 g
		30 e
			25 f
					23 j
				22 i
21 h
	10 b

------------erase 35------------
	5 d
		30 e
			25 f
					23 j
				22 i
21 h
	10 b

------------insert 16-18------------
	5 d
		30 e
			25 f
					23 j
				22 i
21 h
			18 l
				17 m
		16 k
	10 b

------------erase 10------------
	5 d
		30 e
			25 f
					23 j
				22 i
21 h
		18 l
			17 m
	16 k

------------erase 5------------
	30 e
		25 f
				23 j
			22 i
21 h
		18 l
			17 m
	16 k

------------erase 30------------
	25 f
			23 j
		22 i
21 h
		18 l
			17 m
	16 k

------------erase 25------------
		23 j
	22 i
21 h
		18 l
			17 m
	16 k

------------erase 21------------
	23 j
22 i
		18 l
			17 m
	16 k

------------erase 18------------
	23 j
22 i
		17 m
	16 k

------------erase 17------------
	23 j
22 i
	16 k

------------erase 16------------
	23 j
22 i

------------erase 22------------
23 j

------------erase 23------------

------------erase 23 again------------

==6259== 
==6259== HEAP SUMMARY:
==6259==     in use at exit: 0 bytes in 0 blocks
==6259==   total heap usage: 16 allocs, 16 frees, 77,920 bytes allocated
==6259== 
==6259== All heap blocks were freed -- no leaks are possible
==6259== 
==6259== For lists of detected and suppressed errors, rerun with: -s
==6259== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

----------output9----------


+++++++Map Test 7++++++++

++++++++new tree++++++++++++

++++++++new tree again++++++++++++
		z zoo
			r fire
	k kite
			d rose
				c ice
		b breeze
a boy

++++++++tree 1++++++++++++
		z zoo
			r fire
	k kite
			d rose
		b breeze
a boy

++++++++tree 2++++++++++++
		z zoo
			r fire
	k kite
			d rose
				c cute
		b breeze
a boy

++++++++new tree again++++++++++++
		z zoo
			r fire
	k kite
			d rose
		b breeze
a boy


+++++++Valgrind++++++++

==6289== Memcheck, a memory error detector
==6289== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==6289== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==6289== Command: ./maptest7
==6289== 
++++++++new tree++++++++++++

++++++++new tree again++++++++++++
		z zoo
			r fire
	k kite
			d rose
				c ice
		b breeze
a boy

++++++++tree 1++++++++++++
		z zoo
			r fire
	k kite
			d rose
		b breeze
a boy

++++++++tree 2++++++++++++
		z zoo
			r fire
	k kite
			d rose
				c cute
		b breeze
a boy

++++++++new tree again++++++++++++
		z zoo
			r fire
	k kite
			d rose
		b breeze
a boy

==6289== 
==6289== HEAP SUMMARY:
==6289==     in use at exit: 0 bytes in 0 blocks
==6289==   total heap usage: 27 allocs, 27 frees, 78,800 bytes allocated
==6289== 
==6289== All heap blocks were freed -- no leaks are possible
==6289== 
==6289== For lists of detected and suppressed errors, rerun with: -s
==6289== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

----------output10----------


+++++++Map Test 8 with Valgrind++++++++

==6318== Memcheck, a memory error detector
==6318== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==6318== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==6318== Command: ./maptest8
==6318== 
==6318== 
==6318== HEAP SUMMARY:
==6318==     in use at exit: 0 bytes in 0 blocks
==6318==   total heap usage: 199,993 allocs, 199,993 frees, 16,072,064 bytes allocated
==6318== 
==6318== All heap blocks were freed -- no leaks are possible
==6318== 
==6318== For lists of detected and suppressed errors, rerun with: -s
==6318== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

----------Done----------

chgrp: cannot access 'output': No such file or directory
chmod: cannot access 'output': No such file or directory
